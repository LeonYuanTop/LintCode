public class Solution {
    /*
     * @param : string A to be repeated
     * @param : string B
     * @return: the minimum number of times A has to be repeated
     */
    public int getlcs(String a,String b){
        int m=a.length();
        int n=b.length();
        int[][] dp=new int[m+1][n+1];
        for(int i=0;i<m;i++)
        dp[i][0]=0;
        for(int i=0;i<n;i++)
        dp[0][i]=0;
        for(int i=1;i<=m;i++){
            for(int j=1;j<=n;j++){
                if(a.charAt(i-1)==b.charAt(j-1))
                dp[i][j]=dp[i-1][j-1]+1;
                else  dp[i][j]=Math.max( dp[i-1][j], dp[i][j-1]);
            }
        }
        return dp[m][n];
    }
    public int repeatedString(String A, String B) {
        // write your code here
        int la=A.length();
        int lb=B.length();
        int i=0;
        boolean flag=false;
        int temp=0;
        while(i<la)
        {   
            if(A.charAt(i)!=B.charAt(0))i++;
            else{
                int j=0;
                temp=i;
                while(i<la&&j<lb)
                {
                    if(A.charAt(i)==B.charAt(j))
                    {
                        i++;
                        j++;
                    }
                    else break;
                }
                if(j==lb-1)return 1;
                else if(i==la)flag=true;
                
            }
            
            if(flag==true)break;
        }
        System.out.println(temp);
        System.out.println(flag);
        if(!flag)return -1;
        else{
            String str=A;
            int length=la-temp;
            int cn=1;
            while(length<lb)
            {
               length+=la;
               str+=A;
               cn++;
            }
           System.out.println(cn);
            if(getlcs(str,B)==lb)
            return cn;
        }
        return -1;
    }
}
